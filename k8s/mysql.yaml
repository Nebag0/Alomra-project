# k8s/mysql.yaml

# --- Service MySQL ---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  clusterIP: None # Utilisation d'un Headless Service pour une découverte DNS directe des pods (utile si plusieurs réplicas)

---

# --- PersistentVolumeClaim pour MySQL ---
# Ce PVC demandera un volume persistant pour stocker les données de MySQL.
# Minikube et Docker Desktop ont généralement un provisionneur de stockage par défaut
# (souvent "standard") qui créera automatiquement un PersistentVolume (PV) pour ce PVC.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc # Le nom attendu par votre déploiement MySQL
  labels:
    app: mysql
spec:
  accessModes:
    - ReadWriteOnce # Permet au volume d'être monté en lecture-écriture par un seul nœud
  resources:
    requests:
      storage: 1Gi # Demande 1 Gigaoctet de stockage. Adaptez si nécessaire.
  # storageClassName: standard # Généralement optionnel si vous avez un StorageClass par défaut.
                               # Décommentez si votre PVC ne se lie pas automatiquement.

---

# --- Déploiement MySQL ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate # Utilise la stratégie Recreate pour les mises à jour afin d'éviter les problèmes avec un volume unique
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0 # Utilise la version 8.0 de MySQL
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DB_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_NAME
          volumeMounts:
            # Monte le volume persistant pour stocker les données de la base de données
            - name: mysql-storage
              mountPath: /var/lib/mysql
            # Monte le script d'initialisation (si vous en avez un)
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc # Fait référence au PVC défini ci-dessus
        # Définit le volume basé sur un ConfigMap pour les scripts d'initialisation
        - name: mysql-initdb
          configMap:
            name: mysql-init-script # Assurez-vous que ce ConfigMap existe si vous l'utilisez